name: Run Artillery Load Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  load-testing-and-backend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Start backend server
        run: |
          nohup npm run backend &
          sleep 10  # Wait for the server to start

      - name: Create results directory
        run: mkdir -p ./artillery-results

      - name: Run basic load test
        run: npx artillery run load-tests/basic.yml --output ./artillery-results/basic-report.json
        continue-on-error: true

      - name: Run shopping load test
        run: npx artillery run load-tests/load-test-with-playwright.yml --output ./artillery-results/load-test-report.json
        continue-on-error: true

      - name: Upload results as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artillery-results
          path: ./artillery-results

      - name: Process and display load test results
        run: |
          for report in ./artillery-results/*.json; do
            echo "Results for $(basename $report):"
            jq '.aggregate | {requestsCompleted, requestsPerSecond: .rps.mean, latencyMedian: .latency.median, latency95th: .latency.p95}' $report
            echo "----------------------------------------"
          done

      - name: Check for test failures
        run: |
          if jq -e '.aggregate.codes["5xx"] > 0' ./artillery-results/*.json; then
            echo "Load tests encountered 5xx errors"
            exit 1
          fi